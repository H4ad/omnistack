module.exports = {
  'root': true,
  'ignorePatterns': [
    'dist/**/*',
    'test/**/*',
    'deploy/**/*',
  ],
  'settings': {
    'import/resolver': {
      'typescript': {},
    },
  },
  'overrides': [
    {
      'files': [
        '*.ts',
      ],
      'parserOptions': {
        'project': './tsconfig.json',
        'tsconfigRootDir': './',
      },
      'extends': [
        'eslint:recommended',
        'plugin:node/recommended',
        'plugin:import/recommended',
        'plugin:import/typescript',
        'plugin:@typescript-eslint/eslint-recommended',
        'plugin:@typescript-eslint/recommended',
        'plugin:@typescript-eslint/recommended-requiring-type-checking',
      ],
      'rules': {
        'comma-dangle': [
          'error',
          'always-multiline',
        ],
        'node/no-missing-import': 'off',
        'node/no-empty-function': 'off',
        'node/no-unsupported-features/es-syntax': 'off',
        'node/no-missing-require': 'off',
        'node/shebang': 'off',
        'import/order': [
          'error',
          {
            'newlines-between': 'never',
          },
        ],
        'sort-imports': [
          'error',
          {
            'ignoreDeclarationSort': true,
          },
        ],
        '@typescript-eslint/no-use-before-define': 'off',
        'quotes': [
          'warn',
          'single',
          {
            'avoidEscape': true,
          },
        ],
        'curly': [
          'error',
          'multi-or-nest',
        ],
        'max-len': [
          'warn',
          {
            'code': 140,
            'tabWidth': 2,
            'ignoreStrings': true,
            'ignoreTemplateLiterals': true,
            'ignoreUrls': true,
            'ignorePattern': '^import\\s.+\\sfrom\\s.+;$',
          },
        ],
        'no-case-declarations': 'warn',
        'no-control-regex': 'off',
        'node/no-unpublished-import': 'off',
        '@typescript-eslint/no-namespace': 'off',
        '@typescript-eslint/no-unsafe-argument': 'off',
        '@typescript-eslint/no-unsafe-assignment': 'off',
        '@typescript-eslint/no-unsafe-member-access': 'off',
        '@typescript-eslint/no-unsafe-call': 'off',
        '@typescript-eslint/no-unsafe-return': 'off',
        '@typescript-eslint/no-var-requires': 'off',
        '@typescript-eslint/ban-ts-comment': 'off',
        '@typescript-eslint/no-explicit-any': 'off',
        '@typescript-eslint/no-non-null-assertion': 'off',
        '@typescript-eslint/restrict-template-expressions': 'off',
        '@typescript-eslint/explicit-module-boundary-types': 'off',
        '@typescript-eslint/no-inferrable-types': 'off',
        '@typescript-eslint/member-ordering': [
          'error',
          {
            'default': [
              // Index signature
              'signature',
              // Constructors
              'public-constructor',
              'protected-constructor',
              'private-constructor',
              // Fields
              'protected-static-field',
              'public-static-field',
              'private-static-field',
              'protected-decorated-field',
              'public-decorated-field',
              'private-decorated-field',
              'protected-instance-field',
              'public-instance-field',
              'private-instance-field',
              'protected-abstract-field',
              'public-abstract-field',
              'private-abstract-field',
              // Getters
              'protected-decorated-get',
              'public-decorated-get',
              'private-decorated-get',
              'protected-static-get',
              'public-static-get',
              'private-static-get',
              'protected-instance-get',
              'public-instance-get',
              'private-instance-get',
              'protected-abstract-get',
              'public-abstract-get',
              'private-abstract-get',
              'protected-get',
              'public-get',
              'private-get',
              'decorated-get',
              'static-get',
              'instance-get',
              'abstract-get',
              'get',
              // Setters
              'protected-decorated-set',
              'public-decorated-set',
              'private-decorated-set',
              'protected-static-set',
              'public-static-set',
              'private-static-set',
              'protected-instance-set',
              'public-instance-set',
              'private-instance-set',
              'protected-abstract-set',
              'public-abstract-set',
              'private-abstract-set',
              'protected-set',
              'public-set',
              'private-set',
              'decorated-set',
              'static-set',
              'instance-set',
              'abstract-set',
              'set',
              // Methods
              'public-static-method',
              'protected-static-method',
              'private-static-method',
              'public-decorated-method',
              'protected-decorated-method',
              'private-decorated-method',
              'public-instance-method',
              'protected-instance-method',
              'private-instance-method',
              'public-abstract-method',
              'protected-abstract-method',
              'private-abstract-method',
            ],
          },
        ],
      },
    },
  ],
};
